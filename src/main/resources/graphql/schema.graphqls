enum Attendance {
    ATTENDING
    NOT_ATTENDING
    MAYBE
    NO_RESPONSE
}

type Person {
    id: ID!
    email: String!
    first_name: String
    last_name: String
}

type Event {
    id: ID!
    host: Person!
    title: String!
    description: String
    date_of_event: String!
    time_of_event: String!
    location: String
    invitations: [Invitation]
}

type Invitation {
    id: ID!
    guest: Person!
    event_id: Int!
    attendance: Attendance!
}

type Query {
    getAllPersons: [Person]
    getAllEvents: [Event]
    getAllInvitations: [Invitation]
    getEventById(id: Int): Event
    getInvitationById(id: Int): Invitation
}

type Mutation {
    setAttendance(attendance: Attendance, invitation_id: Int): String
}

schema {
    query: Query
}